{"version":3,"sources":["App.tsx","index.tsx"],"names":["emptyParts","textStart","textEnd","prefix","suffix","encodedDash","codePointAt","toString","toUpperCase","padStart","fmt","fn","x","window","encodeURIComponent","split","join","App","useState","urlStr","setUrlStr","parts","setParts","upsertParts","partial","useMemo","url","URL","valid","hash","useEffect","validChar","regex","textFragment","match","Array","fill","map","decodeURIComponent","newUrl","filter","Boolean","startsWith","String","onSubmit","e","preventDefault","htmlFor","id","type","value","onChange","currentTarget","trim","hidden","onClick","style","padding","margin","userSelect","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.10518fc5.chunk.js","sourcesContent":["import { regex } from 'fancy-regex'\nimport { FC, useEffect, useMemo, useState } from 'react'\n\n// https://web.dev/text-fragments/\n\nconst emptyParts = {\n\ttextStart: '',\n\ttextEnd: '',\n\tprefix: '',\n\tsuffix: '',\n}\n\nconst encodedDash =\n\t'%' + '-'.codePointAt(0)!.toString(16).toUpperCase().padStart(2, '0')\n\nconst encodeURIComponent = (x: string) =>\n\twindow.encodeURIComponent(x).split('-').join(encodedDash)\n\nconst fmt = (fn: (x: string) => string) => (x?: string) =>\n\tx ? fn(encodeURIComponent(x)) : ''\n\nexport const App: FC = () => {\n\tconst [urlStr, setUrlStr] = useState('')\n\n\tconst [parts, setParts] = useState(emptyParts)\n\n\tconst upsertParts = (partial: Partial<typeof emptyParts>) => {\n\t\tsetParts((parts) => ({ ...parts, ...partial }))\n\t}\n\n\tconst { valid, hash } = useMemo(() => {\n\t\ttry {\n\t\t\tconst url = new URL(urlStr)\n\n\t\t\treturn { url, valid: true, hash: url.hash }\n\t\t} catch {\n\t\t\treturn { url: null, valid: false, hash: '' }\n\t\t}\n\t}, [urlStr])\n\n\tuseEffect(() => {\n\t\tconst validChar = regex`[!%'()*\\-.0-9A-Z_a-z~]`\n\n\t\t// #:~:text=[prefix-,]textStart[,textEnd][,-suffix]\n\t\tconst textFragment = regex`\n            ^\n                \\#:~:text=\n                (?:(${validChar}+)-,)?  # prefix (optional)\n                (${validChar}+)         # textStart\n                (?:,(${validChar}+))?   # textEnd (optional)\n                (?:,-(${validChar}+))?  # suffix (optional)\n            $\n        `\n\n\t\tconst [, /* match */ prefix, textStart, textEnd, suffix] = (\n\t\t\thash.match(textFragment) || new Array(5).fill('')\n\t\t).map((x) => {\n\t\t\tif (!x) return ''\n\n\t\t\ttry {\n\t\t\t\treturn decodeURIComponent(x)\n\t\t\t} catch {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t})\n\n\t\tsetParts({\n\t\t\tprefix,\n\t\t\ttextStart,\n\t\t\ttextEnd,\n\t\t\tsuffix,\n\t\t})\n\t}, [hash])\n\n\tconst newUrl = useMemo(() => {\n\t\ttry {\n\t\t\tconst { prefix, textStart, textEnd, suffix } = parts\n\n\t\t\tconst url = new URL(urlStr)\n\n\t\t\tif (textStart) {\n\t\t\t\t// #:~:text=[prefix-,]textStart[,textEnd][,-suffix]\n\t\t\t\turl.hash = [\n\t\t\t\t\t'#:~:text=',\n\t\t\t\t\tfmt((x) => `${x}-,`)(prefix),\n\t\t\t\t\tfmt((x) => x)(textStart),\n\t\t\t\t\tfmt((x) => `,${x}`)(textEnd),\n\t\t\t\t\tfmt((x) => `,-${x}`)(suffix),\n\t\t\t\t]\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.join('')\n\t\t\t} else {\n\t\t\t\turl.hash = hash.startsWith('#:~:text=') ? '' : hash\n\t\t\t}\n\n\t\t\treturn String(url)\n\t\t} catch {\n\t\t\treturn ''\n\t\t}\n\t}, [parts, urlStr, hash])\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Text Fragment Editor</h1>\n\n\t\t\t<form onSubmit={(e) => e.preventDefault()}>\n\t\t\t\t<div>\n\t\t\t\t\t<label htmlFor='url'>\n\t\t\t\t\t\tURL\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='url'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={urlStr}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tsetUrlStr(e.currentTarget.value.trim())\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{urlStr.trim() && !valid && <div>Please enter a valid URL</div>}\n\n\t\t\t\t<div hidden={!valid}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='textStart'>\n\t\t\t\t\t\t\tText start\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='textStart'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={parts.textStart}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupsertParts({\n\t\t\t\t\t\t\t\t\ttextStart: e.currentTarget.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='textEnd'>\n\t\t\t\t\t\t\tText end\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='textEnd'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={parts.textEnd}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupsertParts({\n\t\t\t\t\t\t\t\t\ttextEnd: e.currentTarget.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='prefix'>\n\t\t\t\t\t\t\tPrefix\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='prefix'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={parts.prefix}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupsertParts({\n\t\t\t\t\t\t\t\t\tprefix: e.currentTarget.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor='suffix'>\n\t\t\t\t\t\t\tSuffix\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='suffix'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={parts.suffix}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupsertParts({\n\t\t\t\t\t\t\t\t\tsuffix: e.currentTarget.value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tonClick={() => setParts(emptyParts)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove text fragment\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<div\n\t\t\t\thidden={!valid}\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: '20px 0',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>Output</div>\n\t\t\t\t<pre\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: '-10px 0',\n\t\t\t\t\t\tpadding: '20px 0',\n\t\t\t\t\t\tuserSelect: 'all',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<code>{newUrl}</code>\n\t\t\t\t</pre>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import './styles.css'\nimport { render } from 'react-dom'\n\nimport { App } from './App'\n\nconst rootElement = document.getElementById('root')\nrender(<App />, rootElement)\n"],"sourceRoot":""}